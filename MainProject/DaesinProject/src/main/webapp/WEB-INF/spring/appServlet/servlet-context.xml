<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 스캔한 패지키 내부의 클래스 중 Controller 어노테이션을 가지고 있는 클래스들을 Controller로 로딩하도록 
		한다 -->
	<annotation-driven />

	<!-- @Transactional 어노테이션을 이용하는 경우 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" proxy-target-class="true" /> <!-- <3> -->

	<!-- 스캔할 bean들이 모여있는 패키지를 지정한다. -->
	<context:component-scan
		base-package="com.daesin.controller" />
	<context:component-scan
		base-package="com.daesin.dao" />
	<context:component-scan
		base-package="com.daesin.service" />


	<!-- Controller의 메서드에서 반환하는 문자열 앞 뒤에 붙힐 경로 정보를 셋팅한다. -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 정적파일(이미지, 사운드, 동영상, JS, CSS 등등) 경로 셋팅 -->
	<!-- <resources mapping="/**" location="/resources/" /> -->
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/scss/**" location="/resources/scss/" />
	<resources mapping="/upload/**" location="/resources/upload/" />

	<interceptors>

		<interceptor>
			<mapping path="/**" />
			<beans:bean class="com.daesin.interceptor.MenuInterceptor" />
		</interceptor>

		<!-- 로그인시 인터셉터 발동 -->
		<interceptor>
			<mapping path="/member/login_pro" />
			<beans:bean
				class="com.daesin.interceptor.CheckLoginInterceptor" />
		</interceptor>

		<!-- 로그인이 필요한 페이지 -->
		<interceptor>
			<mapping path="/member/logout" />
			<mapping path="/member/support" />
			<mapping path="/member/faq" />
			<mapping path="/member/modify" />
			<beans:bean class="com.daesin.interceptor.AuthInterceptor" />
		</interceptor>
		<!-- <interceptor> <mapping path="/board/modify"/> <mapping path="/board/delete"/> 
			<beans:bean class="com.daesin.interceptor.CheckWriterInterceptor" /> </interceptor> -->
	</interceptors>



	<!-- properties 파일의 내용을 사용할 수 있도록 Bean을 정의한다. -->
	<beans:bean
		class='org.springframework.beans.factory.config.PropertyPlaceholderConfigurer'>
		<beans:property name="locations">
			<beans:list>
				<beans:value>/WEB-INF/properties/option.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- MessageSource를 등록한다 -->
	<beans:bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>/WEB-INF/properties/error_message</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Message 접근을 위한 접근자 등록 -->
	<beans:bean
		class="org.springframework.context.support.MessageSourceAccessor">
		<beans:constructor-arg ref="messageSource" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"
		id="multipartResolver" />
</beans:beans>

